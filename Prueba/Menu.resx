<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnNumeros.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5wBx28wpHwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="BtnLetras.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>